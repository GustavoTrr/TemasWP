
Este tema foi criado como ESTUDO
com base na série de posts https://www.wptotal.com/como-criar-um-wordpress-theme/

Aula 1
https://www.wptotal.com/como-criar-um-template-wordpress-parte-1/

1ª Dica: O WordPress é um gestor de conteúdo que no inicio pode fazer alguma confusão as muitas pastas e ficheiros que tem, mas você só tem que se preocupar com 2 coisas: o ficheiro wp-config.php e a pasta wp-content.

O ficheiro wp-config.php contém toda a informação necessária para o WordPress se ligar a base de dados (banco de dados) e funcionar normalmente. Já a pasta wp-content é onde ficam os temas e os plugins.

As partes/ficheiros básicos e essenciais de um tema são os seguintes:

* header.php: local onde fica o código do cabeçalho <head>, e início do corpo <body>
* sidebar.php: local onde fica o código da lateral
* footer.php: local onde fica o código do rodapé
* index.php: código que mostra os artigos na página inicial
* single.php: código que mostra o artigo na sua própria página
* page.php: código que mostra o conteúdo de uma página estática
* archive.php: igual ao index.php, o código nesta parte vai mostrar os artigos que estão no arquivo, nas categorias, tags, etc
* functions.php: local onde ficam algumas funções que adicionam mais capacidades aos temas
* 404.php: igual ao index.php, em vez de mostrar um artigo deverá de mostrar um texto a avisar que o conteúdo não foi encontrado
* style.css: ficheiro onde fica o stylesheet do tema

2ª - Criamos uma página única com o modelo HTML que usaremos.
3ª - separaremos as partes deste conteúdo HTML referencial em arquivos separados.
4ª - Aprendemos que sem o arquivo css, o WP não considera um tema pronto para uso.

 - Funções utilizadas:
	- get_header();
	- get_sidebar();
	- get_footer();
	
Aula 2
https://www.wptotal.com/como-criar-um-wordpress-theme-parte-2/

 - Acrescentamos no <head> o seguinte código:

			<link rel="profile" href="http://gmpg.org/xfn/11" />
			<meta http-equiv="Content-Type" content="<?php bloginfo('html_type'); ?>; charset=<?php bloginfo('charset'); ?>" />
			<title><?php wp_title(''); ?></title>
			<link rel="stylesheet" type="text/css" media="all" href="<?php bloginfo( 'stylesheet_url' ); ?>" />
			<link rel="pingback" href="<?php bloginfo( 'pingback_url' ); ?>" />
			<?php if ( is_singular() && get_option( 'thread_comments' ) ) wp_enqueue_script( 'comment-reply' ); wp_head(); ?>

			linha 1: indica ao browser como o  mark-up deve de ser usado;
			linha 2: indica o tipo de conteúdo e o conjunto de caracteres que está a ser usado;
			linha 3: a tag wp_title vai gerar um título diferente para cada página. Esta tag pode ser mais trabalhada, mas falamos nisso noutro artigo;
			linha 4: insere automaticamente o stylesheet criado anteriormente (style.css). O wordpress deteta a sua localização e insere o url do ficheiro;
			linha 5: gera o url de pingback, não é obrigatório mas convém usar;
			linha 6: ativa o suporte a comentários com vários níveis e também tem a tag wp_head que serve para inserir outras linhas de código nesta zona do tema (é uma tag muito usada pelos plugins)
			
 - Mais em baixo temos o menu e mais uma vez é uma escolha sua. Pode criar o menu manualmente usado html, usar alguma tag do wordpress para listar as categorias (o mais usado) ou usar os menus personalizados do wordpress que permitem adicionar ou remover links do menu através do painel de administração.
	- Nós optamos por mostrar as categorias, por isso vamos usar o seguinte código:
	- <?php wp_list_cats('sort_column=name'); ?>
	- Se você preferir mostrar as páginas em vez das categorias, use a seguinte tag:
	- <?php wp_list_pages('title_li='); ?>
	
 - Funções utilzadas:
	- bloginfo('html_type');
	- bloginfo('charset');
	- wp_title('');
	- bloginfo( 'stylesheet_url' );
	- bloginfo( 'pingback_url' );
	- if ( is_singular() && get_option( 'thread_comments' ) ) wp_enqueue_script( 'comment-reply' ); 
	- wp_head();
	- bloginfo('name');
	- bloginfo('description');
	- wp_list_cats('sort_column=name');